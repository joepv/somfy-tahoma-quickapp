{"name":"Tahoma Switch","type":"com.fibaro.deviceController","apiVersion":"1.2","initialProperties":{"viewLayout":{"$jason":{"body":{"header":{"style":{"height":"0"},"title":"quickApp_device_26"},"sections":{"items":[{"components":[{"name":"statusLabel","style":{"weight":"1.2"},"text":"status","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"}]}},"head":{"title":"quickApp_device_26"}}},"uiCallbacks":[],"quickAppVariables":[{"name":"userId","type":"string","value":"none"},{"name":"userPassword","type":"string","value":"none"}],"typeTemplateInitialized":true},"files":[{"name":"main","isMain":true,"isOpen":true,"content":"----------------------------------------------------------------------------------\n-- Somfy TaHoma switch\n-- Version 0.9 (April 2022)\n-- Copyright (c)2022 Joep Verhaeg <info@joepverhaeg.nl>\n\n-- Full documentation you can find at:\n-- https://docs.joepverhaeg.nl/somfy\n----------------------------------------------------------------------------------\n-- DISCLAIMER:\n-- This Quick App has been written in such a way that it respects the Somfy API \n-- guidelines. Your use of the Somfy TaHoma switch Quick App is solely at \n-- your own risk. If your public IP address is blocked by the Somfy API servers, \n-- that is your own responsibility.\n\n-- I (Joep Verhaeg) am not providing any support or advice of any kind. If Somfy \n-- stops offering the API that this Quick App uses, I (Joep Verhaeg) will not be \n-- responsible for the failure of automations made with this Quick App.\n----------------------------------------------------------------------------------\n-- DESCRIPTION:\n-- This Quick App connects your Somfy TaHoma switch connected products to the HC3.\n \n-- QUICK SETUP:\n-- 1. Configure your devices on the TaHoma switch,\n-- 2. Configure the username and password in the Quick App variables.\n----------------------------------------------------------------------------------\n\nlocal function getChildVariable(child, varName)\n    for _,v in ipairs(child.properties.quickAppVariables or {}) do\n        if (v.name == varName) then \n            return v.value\n        end\n    end\n    return \"\"\nend\n\nclass 'RollerShutter'(QuickAppChild)\nfunction RollerShutter:__init(device)\n    -- You should not insert code before QuickAppChild.__init.\n    QuickAppChild.__init(self, device) \nend\n\nfunction RollerShutter:open()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send OPEN command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"open\")\n    self.parent:SendCommand(deviceURL, label, \"open\", 99)\n    self:updateProperty(\"value\", 99)\nend\n\nfunction RollerShutter:close()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send CLOSE command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"CLOSE\")\n    self.parent:SendCommand(deviceURL, label, \"close\", 0)\n    self:updateProperty(\"value\", 0)\nend\n\nfunction RollerShutter:stop()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send STOP command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"STOP\")\n    self.parent:SendCommand(deviceURL, label, \"stop\", 0)\n    self:updateProperty(\"value\", 50)\nend\n\n-- Value is type of integer (0-99)\nfunction RollerShutter:setValue(value)\n    if value == 123 then\n        -- favorite started for the my button.\n        local deviceURL = self:getVariable(\"deviceURL\")\n        local label = self.name\n        self:debug(\"Send MY BUTTON command for \" .. label .. \"(\" .. deviceURL .. \")\")\n        self:updateProperty(\"log\", \"MY\")\n        self.parent:SendCommand(deviceURL, label, \"my\", 50)\n        self:updateProperty(\"value\", 50)\n    else\n        local deviceURL = self:getVariable(\"deviceURL\")\n        if string.sub(deviceURL,1,5) == \"io://\" then\n            local label = self.name\n            self:debug(\"Send LEVEL command for \" .. label .. \"(\" .. deviceURL .. \")\")\n            self:updateProperty(\"log\", \"LEVEL\")\n            local level = 100 - tonumber(value)\n            self.parent:SendCommand(deviceURL, label, \"setClosure\", level)\n            self:updateProperty(\"value\", value)\n        else\n            self:debug(\"Erro: LEVEL command NOT supported for an RTS device!\")\n        end\n    end\nend\n\nclass 'ExteriorScreen'(QuickAppChild)\nfunction ExteriorScreen:__init(device)\n    -- You should not insert code before QuickAppChild.__init.\n    QuickAppChild.__init(self, device) \nend\n\nfunction ExteriorScreen:open()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send OPEN command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"open\")\n    self.parent:SendCommand(deviceURL, label, \"open\", 99)\n    self:updateProperty(\"value\", 99)\nend\n\nfunction ExteriorScreen:close()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send CLOSE command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"CLOSE\")\n    self.parent:SendCommand(deviceURL, label, \"close\", 0)\n    self:updateProperty(\"value\", 0)\nend\n\nfunction ExteriorScreen:stop()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send STOP command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"STOP\")\n    self.parent:SendCommand(deviceURL, label, \"stop\", 0)\n    self:updateProperty(\"value\", 50)\nend\n\n-- Value is type of integer (0-99)\nfunction ExteriorScreen:setValue(value)\n    if value == 123 then\n        -- favorite started for the my button.\n        local deviceURL = self:getVariable(\"deviceURL\")\n        local label = self.name\n        self:debug(\"Send MY BUTTON command for \" .. label .. \"(\" .. deviceURL .. \")\")\n        self:updateProperty(\"log\", \"MY\")\n        self.parent:SendCommand(deviceURL, label, \"my\", 50)\n        self:updateProperty(\"value\", 50)\n    else\n        local deviceURL = self:getVariable(\"deviceURL\")\n        if string.sub(deviceURL,1,5) == \"io://\" then\n            local label = self.name\n            self:debug(\"Send LEVEL command for \" .. label .. \"(\" .. deviceURL .. \")\")\n            self:updateProperty(\"log\", \"LEVEL\")\n            local level = 100 - tonumber(value)\n            self.parent:SendCommand(deviceURL, label, \"setClosure\", level)\n            self:updateProperty(\"value\", value)\n        else\n            self:debug(\"Erro: LEVEL command NOT supported for an RTS device!\")\n        end\n    end\nend\n\nclass 'Screen'(QuickAppChild)\nfunction Screen:__init(device)\n    -- You should not insert code before QuickAppChild.__init.\n    QuickAppChild.__init(self, device) \nend\n\nfunction Screen:open()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send OPEN command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"open\")\n    self.parent:SendCommand(deviceURL, label, \"open\", 99)\n    self:updateProperty(\"value\", 99)\nend\n\nfunction Screen:close()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send CLOSE command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"CLOSE\")\n    self.parent:SendCommand(deviceURL, label, \"close\", 0)\n    self:updateProperty(\"value\", 0)\nend\n\nfunction Screen:stop()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send STOP command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"STOP\")\n    self.parent:SendCommand(deviceURL, label, \"stop\", 0)\n    self:updateProperty(\"value\", 50)\nend\n\n-- Value is type of integer (0-99)\nfunction Screen:setValue(value)\n    if value == 123 then\n        -- favorite started for the my button.\n        local deviceURL = self:getVariable(\"deviceURL\")\n        local label = self.name\n        self:debug(\"Send MY BUTTON command for \" .. label .. \"(\" .. deviceURL .. \")\")\n        self:updateProperty(\"log\", \"MY\")\n        self.parent:SendCommand(deviceURL, label, \"my\", 50)\n        self:updateProperty(\"value\", 50)\n    else\n        local deviceURL = self:getVariable(\"deviceURL\")\n        if string.sub(deviceURL,1,5) == \"io://\" then\n            local label = self.name\n            self:debug(\"Send LEVEL command for \" .. label .. \"(\" .. deviceURL .. \")\")\n            self:updateProperty(\"log\", \"LEVEL\")\n            local level = 100 - tonumber(value)\n            self.parent:SendCommand(deviceURL, label, \"setClosure\", level)\n            self:updateProperty(\"value\", value)\n        else\n            self:debug(\"Erro: LEVEL command NOT supported for an RTS device!\")\n        end\n    end\nend\n\nclass 'Awning'(QuickAppChild)\nfunction Awning:__init(device)\n    -- You should not insert code before QuickAppChild.__init.\n    QuickAppChild.__init(self, device) \nend\n\nfunction Awning:open()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send OPEN command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"open\")\n    self.parent:SendCommand(deviceURL, label, \"open\", 99)\n    self:updateProperty(\"value\", 99)\nend\n\nfunction Awning:close()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send CLOSE command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"CLOSE\")\n    self.parent:SendCommand(deviceURL, label, \"close\", 0)\n    self:updateProperty(\"value\", 0)\nend\n\nfunction Awning:stop()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send STOP command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"STOP\")\n    self.parent:SendCommand(deviceURL, label, \"stop\", 0)\n    self:updateProperty(\"value\", 50)\nend\n\n-- Value is type of integer (0-99)\nfunction Awning:setValue(value)\n    if value == 123 then\n        -- favorite started for the my button.\n        local deviceURL = self:getVariable(\"deviceURL\")\n        local label = self.name\n        self:debug(\"Send MY BUTTON command for \" .. label .. \"(\" .. deviceURL .. \")\")\n        self:updateProperty(\"log\", \"MY\")\n        self.parent:SendCommand(deviceURL, label, \"my\", 50)\n        self:updateProperty(\"value\", 50)\n    else\n        local deviceURL = self:getVariable(\"deviceURL\")\n        if string.sub(deviceURL,1,5) == \"io://\" then\n            local label = self.name\n            self:debug(\"Send LEVEL command for \" .. label .. \"(\" .. deviceURL .. \")\")\n            self:updateProperty(\"log\", \"LEVEL\")\n            local level = 100 - tonumber(value)\n            self.parent:SendCommand(deviceURL, label, \"setClosure\", level)\n            self:updateProperty(\"value\", value)\n        else\n            self:debug(\"Erro: LEVEL command NOT supported for an RTS device!\")\n        end\n    end\nend\n\nclass 'Pergola'(QuickAppChild)\nfunction Pergola:__init(device)\n    -- You should not insert code before QuickAppChild.__init.\n    QuickAppChild.__init(self, device) \nend\n\nfunction Pergola:open()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send OPEN command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"open\")\n    self.parent:SendCommand(deviceURL, label, \"open\", 99)\n    self:updateProperty(\"value\", 99)\nend\n\nfunction Pergola:close()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send CLOSE command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"CLOSE\")\n    self.parent:SendCommand(deviceURL, label, \"close\", 0)\n    self:updateProperty(\"value\", 0)\nend\n\nfunction Pergola:stop()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send STOP command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"STOP\")\n    self.parent:SendCommand(deviceURL, label, \"stop\", 0)\n    self:updateProperty(\"value\", 50)\nend\n\n-- Value is type of integer (0-99)\nfunction Pergola:setValue(value)\n    if value == 123 then\n        -- favorite started for the my button.\n        local deviceURL = self:getVariable(\"deviceURL\")\n        local label = self.name\n        self:debug(\"Send MY BUTTON command for \" .. label .. \"(\" .. deviceURL .. \")\")\n        self:updateProperty(\"log\", \"MY\")\n        self.parent:SendCommand(deviceURL, label, \"my\", 50)\n        self:updateProperty(\"value\", 50)\n    else\n        local deviceURL = self:getVariable(\"deviceURL\")\n        if string.sub(deviceURL,1,5) == \"io://\" then\n            local label = self.name\n            self:debug(\"Send LEVEL command for \" .. label .. \"(\" .. deviceURL .. \")\")\n            self:updateProperty(\"log\", \"LEVEL\")\n            local level = 100 - tonumber(value)\n            self.parent:SendCommand(deviceURL, label, \"setClosure\", level)\n            self:updateProperty(\"value\", value)\n        else\n            self:debug(\"Erro: LEVEL command NOT supported for an RTS device!\")\n        end\n    end\nend\n\nclass 'GarageDoor'(QuickAppChild)\nfunction GarageDoor:__init(device)\n    -- You should not insert code before QuickAppChild.__init.\n    QuickAppChild.__init(self, device) \nend\n\nfunction GarageDoor:open()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send OPEN command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"open\")\n    self.parent:SendCommand(deviceURL, label, \"open\", 99)\n    self:updateProperty(\"value\", 99)\nend\n\nfunction GarageDoor:close()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send CLOSE command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"CLOSE\")\n    self.parent:SendCommand(deviceURL, label, \"close\", 0)\n    self:updateProperty(\"value\", 0)\nend\n\nfunction GarageDoor:stop()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send STOP command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"STOP\")\n    self.parent:SendCommand(deviceURL, label, \"stop\", 0)\n    self:updateProperty(\"value\", 50)\nend\n\n-- Value is type of integer (0-99)\nfunction GarageDoor:setValue(value)\n    if value == 123 then\n        -- favorite started for the my button.\n        local deviceURL = self:getVariable(\"deviceURL\")\n        local label = self.name\n        self:debug(\"Send MY BUTTON command for \" .. label .. \"(\" .. deviceURL .. \")\")\n        self:updateProperty(\"log\", \"MY\")\n        self.parent:SendCommand(deviceURL, label, \"my\", 50)\n        self:updateProperty(\"value\", 50)\n    else\n        local deviceURL = self:getVariable(\"deviceURL\")\n        if string.sub(deviceURL,1,5) == \"io://\" then\n            local label = self.name\n            self:debug(\"Send LEVEL command for \" .. label .. \"(\" .. deviceURL .. \")\")\n            self:updateProperty(\"log\", \"LEVEL\")\n            local level = 100 - tonumber(value)\n            self.parent:SendCommand(deviceURL, label, \"setClosure\", level)\n            self:updateProperty(\"value\", value)\n        else\n            self:debug(\"Erro: LEVEL command NOT supported for an RTS device!\")\n        end\n    end\nend\n\nclass 'Window'(QuickAppChild)\nfunction Window:__init(device)\n    -- You should not insert code before QuickAppChild.__init.\n    QuickAppChild.__init(self, device) \nend\n\nfunction Window:open()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send OPEN command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"open\")\n    self.parent:SendCommand(deviceURL, label, \"open\", 99)\n    self:updateProperty(\"value\", 99)\nend\n\nfunction Window:close()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send CLOSE command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"CLOSE\")\n    self.parent:SendCommand(deviceURL, label, \"close\", 0)\n    self:updateProperty(\"value\", 0)\nend\n\nfunction Window:stop()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send STOP command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"STOP\")\n    self.parent:SendCommand(deviceURL, label, \"stop\", 0)\n    self:updateProperty(\"value\", 50)\nend\n\n-- Value is type of integer (0-99)\nfunction Window:setValue(value)\n    if value == 123 then\n        -- favorite started for the my button.\n        local deviceURL = self:getVariable(\"deviceURL\")\n        local label = self.name\n        self:debug(\"Send MY BUTTON command for \" .. label .. \"(\" .. deviceURL .. \")\")\n        self:updateProperty(\"log\", \"MY\")\n        self.parent:SendCommand(deviceURL, label, \"my\", 50)\n        self:updateProperty(\"value\", 50)\n    else\n        local deviceURL = self:getVariable(\"deviceURL\")\n        if string.sub(deviceURL,1,5) == \"io://\" then\n            local label = self.name\n            self:debug(\"Send LEVEL command for \" .. label .. \"(\" .. deviceURL .. \")\")\n            self:updateProperty(\"log\", \"LEVEL\")\n            local level = 100 - tonumber(value)\n            self.parent:SendCommand(deviceURL, label, \"setClosure\", level)\n            self:updateProperty(\"value\", value)\n        else\n            self:debug(\"Erro: LEVEL command NOT supported for an RTS device!\")\n        end\n    end\nend\n\nclass 'VenetianBlind'(QuickAppChild)\nfunction VenetianBlind:__init(device)\n    -- You should not insert code before QuickAppChild.__init.\n    QuickAppChild.__init(self, device) \nend\n\nfunction VenetianBlind:open()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send OPEN command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"open\")\n    self.parent:SendCommand(deviceURL, label, \"open\", 99)\n    self:updateProperty(\"value\", 99)\nend\n\nfunction VenetianBlind:close()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send CLOSE command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"CLOSE\")\n    self.parent:SendCommand(deviceURL, label, \"close\", 0)\n    self:updateProperty(\"value\", 0)\nend\n\nfunction VenetianBlind:stop()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send STOP command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"STOP\")\n    self.parent:SendCommand(deviceURL, label, \"stop\", 0)\n    self:updateProperty(\"value\", 50)\nend\n\n-- Value is type of integer (0-99)\nfunction VenetianBlind:setValue(value)\n    if value == 123 then\n        -- favorite started for the my button.\n        local deviceURL = self:getVariable(\"deviceURL\")\n        local label = self.name\n        self:debug(\"Send MY BUTTON command for \" .. label .. \"(\" .. deviceURL .. \")\")\n        self:updateProperty(\"log\", \"MY\")\n        self.parent:SendCommand(deviceURL, label, \"my\", 50)\n        self:updateProperty(\"value\", 50)\n    else\n        local deviceURL = self:getVariable(\"deviceURL\")\n        if string.sub(deviceURL,1,5) == \"io://\" then\n            local label = self.name\n            self:debug(\"Send LEVEL command for \" .. label .. \"(\" .. deviceURL .. \")\")\n            self:updateProperty(\"log\", \"LEVEL\")\n            local level = 100 - tonumber(value)\n            self.parent:SendCommand(deviceURL, label, \"setClosure\", level)\n            self:updateProperty(\"value\", value)\n        else\n            self:debug(\"Erro: LEVEL command NOT supported for an RTS device!\")\n        end\n    end\nend\n\nclass 'ExteriorVenetianBlind'(QuickAppChild)\nfunction ExteriorVenetianBlind:__init(device)\n    -- You should not insert code before QuickAppChild.__init.\n    QuickAppChild.__init(self, device) \nend\n\nfunction ExteriorVenetianBlind:open()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send OPEN command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"open\")\n    self.parent:SendCommand(deviceURL, label, \"open\", 99)\n    self:updateProperty(\"value\", 99)\nend\n\nfunction ExteriorVenetianBlind:close()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send CLOSE command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"CLOSE\")\n    self.parent:SendCommand(deviceURL, label, \"close\", 0)\n    self:updateProperty(\"value\", 0)\nend\n\nfunction ExteriorVenetianBlind:stop()\n    local deviceURL = self:getVariable(\"deviceURL\")\n    local label = self.name\n    self:debug(\"Send STOP command for \" .. label .. \"(\" .. deviceURL .. \")\")\n    self:updateProperty(\"log\", \"STOP\")\n    self.parent:SendCommand(deviceURL, label, \"stop\", 0)\n    self:updateProperty(\"value\", 50)\nend\n\n-- Value is type of integer (0-99)\nfunction ExteriorVenetianBlind:setValue(value)\n    if value == 123 then\n        -- favorite started for the my button.\n        local deviceURL = self:getVariable(\"deviceURL\")\n        local label = self.name\n        self:debug(\"Send MY BUTTON command for \" .. label .. \"(\" .. deviceURL .. \")\")\n        self:updateProperty(\"log\", \"MY\")\n        self.parent:SendCommand(deviceURL, label, \"my\", 50)\n        self:updateProperty(\"value\", 50)\n    else\n        local deviceURL = self:getVariable(\"deviceURL\")\n        if string.sub(deviceURL,1,5) == \"io://\" then\n            local label = self.name\n            self:debug(\"Send LEVEL command for \" .. label .. \"(\" .. deviceURL .. \")\")\n            self:updateProperty(\"log\", \"LEVEL\")\n            local level = 100 - tonumber(value)\n            self.parent:SendCommand(deviceURL, label, \"setClosure\", level)\n            self:updateProperty(\"value\", value)\n        else\n            self:debug(\"Erro: LEVEL command NOT supported for an RTS device!\")\n        end\n    end\nend\n\nfunction QuickApp:SendCommand(deviceUrl, label, command, level)\n    self:debug(\"Run a command for device \" .. label .. \" (\" .. deviceUrl .. \")...\")\n    self:debug(\"Using cookie: \" .. self.cookie)\n    self.http:request('https://tahomalink.com/enduser-mobile-web/enduserAPI/exec/apply', {\n            options = {\n                headers = {\n                    [\"Content-Type\"] = \"application/json\",\n                    [\"Host\"] = \"tahomalink.com\",\n                    [\"Connection\"] = \"keep-alive\",\n                    [\"Accept-Encoding\"] = \"gzip, deflate\",\n                    [\"Accept\"] = \"*/*\",\n                    [\"User-Agent\"] = \"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) FxiOS/98.0 Mobile/15E148 Safari/605.1.15\",\n                    [\"Cookie\"] = self.cookie\n                },\n                method = 'POST',\n                data = '{\"actions\":[{\"commands\":[{\"name\":\"' .. command .. '\",\"parameters\":[' .. tonumber(level)  .. ']}],\"deviceURL\":\"' .. deviceUrl .. '\"}], \"label\": \"'.. label ..'\"}'\n            },\n            success = function(response)\n                --self:debug(reponse)\n                if response.status == 401 then\n                    self.retries = self.retries + 1\n                    if self.retries <= 1 then\n                        self:debug(\"Got a \" .. response.status .. \" status, need to reauthenticate!\")\n                        self:updateView(\"statusLabel\", \"text\", label .. \"reauth...\")\n                        self:Authenticate(function() self:SendCommand(deviceUrl, label, command, level, cookie) end)\n                    elseif response.status == 400 then\n                        self:updateView(\"statusLabel\", \"text\", \"error 400\")\n                        self:debug(json.encode(response))\n                    else\n                        self:debug(\"Tried 2 times, I think the password is incorrect!\")\n                    end\n                else\n                    self:updateView(\"statusLabel\", \"text\", \"ok\")\n                    self:debug(json.encode(response))\n                end\n            end\n            ,\n            error = function(message)\n                self:updateView(\"statusLabel\", \"text\", \"error\")\n                self:debug(\"Error:\", message)\n            end \n        })    \nend\n\nfunction QuickApp:CreateChilds(initChildData)\n    self:debug(\"Create child devices in the HC3...\")\n    local cdevs = api.get(\"/devices?parentId=\"..self.id) or {}\n    if #cdevs == 0 then\n        for _,c in ipairs(initChildData) do\n            local child = self:createChildDevice(\n                {\n                    name = c.name,\n                    type=c.type,\n                    initialProperties = {},\n                    initialInterfaces = {},\n                },\n                _G[c.className] -- Fetch class constructor from class name\n            )\n            child:setVariable(\"className\", c.className)\n            child:setVariable(\"deviceURL\", c.deviceURL)\n            child:updateProperty(\"manufacturer\", \"Somfy\")\n            local positions = json.decode(\"[{\\\"name\\\":\\\"MY\\\",\\\"label\\\":\\\"MY\\\",\\\"value\\\":123}]\")\n            child:updateProperty(\"favoritePositions\", positions) \n            --child:self:updateProperty(\"deviceRole\", \"BlindsWithoutPositioning\")\n            child.parent = self\n            self:debug(\"Child device \" .. child.name .. \" created with id: \", child.id)\n        end\n    else\n        for _,child in ipairs(cdevs) do\n            local className = getChildVariable(child,\"className\")\n            local childObject = _G[className](child)\n            self.childDevices[child.id]=childObject\n            childObject.parent = self\n        end\n    end\nend\n\nfunction QuickApp:GetDevices()\n    self:debug(\"Get the devices from the Tahoma Switch...\")\n    self.http:request('https://tahomalink.com/enduser-mobile-web/enduserAPI/setup/devices', {\n            options = {\n                headers = {\n                    [\"Content-Type\"] = \"application/x-www-form-urlencoded\",\n                    [\"Host\"] = \"tahomalink.com\",\n                    [\"Connection\"] = \"keep-alive\",\n                    [\"Accept-Encoding\"] = \"gzip, deflate\",\n                    [\"Accept\"] = \"*/*\",\n                    [\"User-Agent\"] = \"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) FxiOS/98.0 Mobile/15E148 Safari/605.1.15\",\n                    [\"Cookie\"] = self.cookie\n                },\n                method = 'GET',\n            },\n            success = function(response)\n                --self:debug(json.encode(response))\n                local devicetable = json.decode(response.data,{others = {null=false}})\n                local initChildData = {}\n                for _,device in ipairs(devicetable) do\n                    if (device.uiClass == \"RollerShutter\") or (device.uiClass == \"ExteriorScreen\") or (device.uiClass == \"Screen\") or (device.uiClass == \"Awning\") or (device.uiClass == \"Pergola\") or (device.uiClass == \"GarageDoor\") or (device.uiClass == \"Window\") or (device.uiClass == \"VenetianBlind\") or (device.uiClass == \"ExteriorVenetianBlind\") then\n                        --and ((device[\"deviceURL\"].startswith(\"io://\")) or (device[\"deviceURL\"].startswith(\"rts://\")))):\n                        self:debug(\"Found device: \" .. device.label .. \" - \" .. device.uiClass .. \" - \" .. device.deviceURL)\n                        -- Set up child table\n                        initChildData[#initChildData+1]={name=device.label, className=device.uiClass, type=\"com.fibaro.rollerShutter\",deviceURL=device.deviceURL}\n                    end\n                end\n                self:CreateChilds(initChildData)\n            end\n            ,\n            error = function(message)\n                self:debug(\"error:\", message)\n            end \n        })\nend\n\nfunction QuickApp:refreshCookie()\n    local expiry = self:getVariable(\"Expiry_Date\")\n    local now    = os.time(os.date(\"!*t\"))\n    if expiry - now < 0 then\n        self:debug(\"Cookie expired, need to reauthenticate!\")\n        self:Authenticate()\n    end\n\n    local s = os.date(\"%S\")\n    local timeout = 3600000 - (s * 1000)\n    fibaro.setTimeout(timeout, function() -- wait 1 hour\n            self:refreshCookie()\n        end)\nend\n\nfunction QuickApp:Authenticate(command)\n    self:debug(\"Start authentication...\")\n    local userId = self:getVariable(\"userId\")\n    local userPassword = self:getVariable(\"userPassword\")\n\n    self.http:request('https://tahomalink.com/enduser-mobile-web/enduserAPI/login', {\n            options = {\n                headers = {\n                    [\"Content-Type\"] = \"application/x-www-form-urlencoded\",\n                    [\"Host\"] = \"tahomalink.com\",\n                    [\"Connection\"] = \"keep-alive\",\n                    [\"Accept-Encoding\"] = \"gzip, deflate\",\n                    [\"Accept\"] = \"*/*\",\n                    [\"User-Agent\"] = \"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) FxiOS/98.0 Mobile/15E148 Safari/605.1.15\"\n                },\n                data = \"userId=\" .. userId .. \"&userPassword=\" .. userPassword,\n                method = 'POST',\n            },\n            success = function(response)\n                --self:debug(json.encode(response))\n                --self:debug(response.headers[\"Set-Cookie\"])\n                self:updateView(\"statusLabel\", \"text\", \"Cookie SET: \" .. response.headers[\"Set-Cookie\"]) \n                self:setVariable(\"Cookie\", response.headers[\"Set-Cookie\"])\n                self.cookie = response.headers[\"Set-Cookie\"]\n                local fiveDaysLater = os.time(os.date(\"!*t\"))+432000 -- current date/time + 5 days (cookie lifetime)\n                self:setVariable(\"Expiry_Date\", fiveDaysLater)\n                if command then \n                    self:debug(\"Command received, run it now...\")\n                    command()\n                end\n            end\n            ,\n            error = function(message)\n                self:debug(\"error:\", message)\n            end \n        })\nend\n\nfunction QuickApp:onInit()\n    self:debug(\"QuickApp: Somfy initialisation...\")\n    self.childsInitialized = true\n    self.retries = 0\n    if not api.get(\"/devices/\" .. self.id).enabled then\n        self:warning(\"The Somfy integration is disabled!\")\n        return\n    end\n    if (self:getVariable(\"userId\") == \"none\") then\n        self:warning(\"Please set the userId Quick App variable first!\")\n        return\n    end\n    self.http = net.HTTPClient({ timeout = 5000 })\n    self:Authenticate(function() self:GetDevices() end)\nend"}]}